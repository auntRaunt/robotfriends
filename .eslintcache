[{"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\index.js":"1","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\robots.js":"2","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\containers\\App.js":"3","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\Scroll.js":"4","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\CardList.js":"5","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\Card.js":"6","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\SearchBox.js":"7","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\ErrorBoundry.js":"8","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\reducers.js":"9","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\constants.js":"10","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\actions.js":"11","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\Header.js":"12","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\CounterButton.js":"13"},{"size":920,"mtime":1610774714750,"results":"14","hashOfConfig":"15"},{"size":1161,"mtime":1609555529088,"results":"16","hashOfConfig":"15"},{"size":3665,"mtime":1610774743205,"results":"17","hashOfConfig":"15"},{"size":278,"mtime":1609819079586,"results":"18","hashOfConfig":"15"},{"size":412,"mtime":1610774683948,"results":"19","hashOfConfig":"15"},{"size":356,"mtime":1609819094344,"results":"20","hashOfConfig":"15"},{"size":408,"mtime":1610774696280,"results":"21","hashOfConfig":"15"},{"size":443,"mtime":1609898115643,"results":"22","hashOfConfig":"15"},{"size":1129,"mtime":1610162825678,"results":"23","hashOfConfig":"15"},{"size":254,"mtime":1610161377851,"results":"24","hashOfConfig":"15"},{"size":738,"mtime":1610164092218,"results":"25","hashOfConfig":"15"},{"size":511,"mtime":1610776103859,"results":"26","hashOfConfig":"15"},{"size":778,"mtime":1610776269142,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"16abe1w",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\index.js",["59"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\n//Create Redux store\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["60","61"],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\robots.js",[],["62","63"],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\containers\\App.js",["64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll.js\";\r\nimport Header from '../components/Header';\r\nimport \"./App.css\";\r\n// import ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\nimport { setSearchField, requestRobots } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots()),\r\n  };\r\n};\r\n\r\n//Class Component\r\nclass App extends React.Component {\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = {\r\n  //     robots: [],\r\n  //     // searchfield: \"\",\r\n  //   };\r\n  // }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props.store.getState());\r\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    //   .then((response) => response.json())\r\n    //   .then((users) => {\r\n    //     this.setState({ robots: users });\r\n    //   });\r\n\r\n    //use redux\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  // onSearchChange = (event) => {\r\n  //   this.setState({ searchfield: event.target.value });\r\n  // };\r\n\r\n  render() {\r\n    // const { robots } = this.state;\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    return isPending ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n} \r\n\r\n//connect(mapStateToProps, mapDispatchToProps)\r\n// = subscribe any changes to Redux Store\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n//Functional Component\r\n// export default function App() {\r\n//   // constructor() {\r\n//   //   super();\r\n//   //   this.state = {\r\n//   //     robots: [],\r\n//   //     searchField: \"\",\r\n//   //   };\r\n//   // }\r\n\r\n//   // componentDidMount() {\r\n//   //   fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//   //     .then((response) => response.json())\r\n//   //     .then((users) => this.setState({ robots: users }));\r\n//   //   // this.setState({ robots: robots });\r\n//   // }\r\n//   const [robots, setRobots] = useState([]);\r\n//   const [searchField, setSearchField] = useState(\"\");\r\n\r\n//   const onSearchChange = (event) => {\r\n//     // this.setState({ searchField: event.target.value });\r\n//     setSearchField(event.target.value);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n//       .then((response) => response.json())\r\n//       .then((users) => setRobots(users));\r\n//   }, []);\r\n\r\n//   // const { robots, searchField } = this.state;\r\n//   const filterdRobots = robots.filter((robot) => {\r\n//     return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n//   });\r\n\r\n//   return (\r\n//     <div className=\"tc\">\r\n//       <h1 className=\"f2\">RoboFriends</h1>\r\n//       <SearchBox searchChange={onSearchChange} />\r\n//       <Scroll>\r\n//         <ErrorBoundry>\r\n//           <CardList robots={filterdRobots} />;\r\n//         </ErrorBoundry>\r\n//       </Scroll>\r\n//     </div>\r\n//   );\r\n// }\r\n","C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\Scroll.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\CardList.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\Card.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\SearchBox.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\ErrorBoundry.js",[],["66","67"],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\reducers.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\constants.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\actions.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\Header.js",[],"C:\\Users\\babaw\\OneDrive\\Documents\\martin\\code\\Tutorial\\andrei\\robofriendsfrom0\\src\\components\\CounterButton.js",[],{"ruleId":"68","severity":1,"message":"69","line":12,"column":7,"nodeType":"70","messageId":"71","endLine":12,"endColumn":13},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"68","severity":1,"message":"78","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"79","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},"no-unused-vars","'logger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["82"],["83"],"no-global-assign","no-unsafe-negation"]